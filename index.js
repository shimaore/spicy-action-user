// Generated by CoffeeScript 1.12.7
(function() {
  var LRU, PouchDB, debug, seem,
    hasProp = {}.hasOwnProperty,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  seem = require('seem');

  PouchDB = require('ccnq4-pouchdb');

  LRU = require('lru');

  this.name = (require('./package')).name;

  debug = (require('debug'))(this.name);

  this.include = function() {
    var base, prefix, ref, user_db, users;
    if (((ref = this.cfg.users) != null ? ref.db : void 0) == null) {
      return;
    }
    prefix = (base = this.cfg.users).prefix != null ? base.prefix : base.prefix = 'org.couchdb.user';
    user_db = new PouchDB(this.cfg.users.db);
    users = new LRU(500);
    this.helper({
      get_user: function() {
        var _id, data, name;
        if (this.session.couchdb_username == null) {
          return null;
        }
        name = this.session.couchdb_username;
        _id = [prefix, name].join(':');
        debug('get_user', {
          name: name,
          _id: _id
        });
        data = users.get(_id);
        if (data != null) {
          return Promise.resolve(data);
        }
        return user_db.get(_id)["catch"](function() {
          return {
            _id: _id,
            name: name,
            roles: [],
            type: 'user'
          };
        }).then(function(data) {
          users.set(_id, data);
          return data;
        });
      }
    });
    this.helper({
      save_user: seem(function*() {
        var changes, doc, k, ref1, v;
        if (this.session.couchdb_username == null) {
          return {};
        }
        doc = (yield this.get_user());
        changes = false;
        changes || (changes = doc.locale !== this.session.locale);
        doc.locale = this.session.locale;
        changes || (changes = doc.timezone !== this.session.timezone);
        doc.timezone = this.session.timezone;
        if ((doc.database == null) && (this.session.database != null)) {
          changes || (changes = doc.database !== this.session.database);
          doc.database = this.session.database;
        }
        if (this.session.user_params != null) {
          if (doc.params == null) {
            doc.params = {};
          }
          ref1 = this.session.user_params;
          for (k in ref1) {
            if (!hasProp.call(ref1, k)) continue;
            v = ref1[k];
            changes || (changes = doc.params[k] !== v);
            doc.params[k] = v;
          }
        }
        debug('save_user', doc);
        if (!changes) {
          return;
        }
        return user_db.put(doc);
      })
    });
    this.helper({
      load_user: seem(function*() {
        var base1, base2, base3, base4, base5, doc, i, len, r, ref1, ref2, ref3;
        if (((ref1 = this.session) != null ? ref1.couchdb_username : void 0) == null) {
          return;
        }
        if (((ref2 = this.cfg.users) != null ? ref2.db : void 0) == null) {
          return;
        }
        doc = (yield this.get_user());
        if ((base1 = this.session).locale == null) {
          base1.locale = doc.locale;
        }
        if ((base2 = this.session).timezone == null) {
          base2.timezone = doc.timezone;
        }
        if ((base3 = this.session).database == null) {
          base3.database = doc.database;
        }
        if ((base4 = this.session).user_params == null) {
          base4.user_params = doc.params;
        }
        if (doc.roles != null) {
          if ((base5 = this.session).couchdb_roles == null) {
            base5.couchdb_roles = [];
          }
          ref3 = doc.roles;
          for (i = 0, len = ref3.length; i < len; i++) {
            r = ref3[i];
            if (indexOf.call(this.session.couchdb_roles, r) < 0) {
              this.session.couchdb_roles.push(r);
            }
          }
        }
      })
    });
    this.on('set_user_param', seem(function*(name, value) {
      var base1, res;
      if (!((name != null) && typeof name === 'string')) {
        this.ack({
          failed: true
        });
        return;
      }
      if ((base1 = this.session).user_params == null) {
        base1.user_params = {};
      }
      this.session.user_params[name] = value;
      res = (yield this.save_user()["catch"]({}));
      return this.ack(res.ok ? {
        ok: true
      } : {
        failed: true
      });
    }));
    this.on('set_locale', seem(function*(locale) {
      var res;
      this.session.locale = locale;
      res = (yield this.save_user()["catch"]({}));
      return this.ack(res.ok ? {
        ok: true
      } : {
        failed: true
      });
    }));
    this.put('/locale/:locale', seem(function*() {
      var locale, res;
      locale = this.params.locale;
      this.session.locale = locale;
      res = (yield this.save_user()["catch"]({}));
      return this.json(res.ok ? {
        ok: true
      } : {
        failed: true
      });
    }));
    this.on('set_timezone', seem(function*(timezone) {
      var res;
      this.session.timezone = timezone;
      res = (yield this.save_user()["catch"]({}));
      return this.ack(res.ok ? {
        ok: true
      } : {
        failed: true
      });
    }));
    return this.put('/timezone/:timezone', seem(function*() {
      var res, timezone;
      timezone = this.params.timezone;
      this.session.timezone = timezone;
      res = (yield this.save_user()["catch"]({}));
      return this.json(res.ok ? {
        ok: true
      } : {
        failed: true
      });
    }));
  };

  this.middleware = seem(function*() {
    yield this.load_user()["catch"](function(error) {
      return debug("load_user failed: " + error);
    });
    return this.next();
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/srv/home/stephane/Artisan/Managed/Telecoms/spicy-action-user/index.coffee.md